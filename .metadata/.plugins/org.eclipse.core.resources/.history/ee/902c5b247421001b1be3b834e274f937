package poker;

import static org.junit.Assert.*;

import org.junit.Test;

public class StudentTests {

	@Test
	public void testBasicConstructorsAndGetters() {
		
		Deck x = new Deck();
			
		assertTrue(x.getNumCards() == 52);
		
		assertTrue(x.getCardAt(0).toString().equals("A of s"));
		assertTrue(x.getCardAt(51).toString().equals("K of d"));
		assertTrue(x.getCardAt(15).toString().equals("3 of h"));
		assertTrue(x.getCardAt(30).toString().equals("5 of c"));
		
	}
	
	@Test
	public void testcopyConstructor() {
		
		Deck x = new Deck();
		Deck y = new Deck();
		
		assertTrue(x != y);
		assertTrue(x.getCardAt(0).toString().equals(
				y.getCardAt(0).toString()));
		assertTrue(x.getCardAt(16).toString().equals(
				y.getCardAt(16).toString()));
		assertTrue(x.getCardAt(32).toString().equals(
				y.getCardAt(32).toString()));
		assertTrue(x.getCardAt(48).toString().equals(
				y.getCardAt(48).toString()));
		
	}
	
	@Test
	public void testShuffle() {
		
		Deck x = new Deck();
		
		x.shuffle();
		
		for(int num = 0; num < x.getNumCards(); num++) {
			System.out.print(x[num]);
		}
		
		assertTrue(x.getCardAt(0).toString().equals("A of s"));
		assertTrue(x.getCardAt(20).toString().equals("J of s"));
		assertTrue(x.getCardAt(25).toString().equals("A of h"));
		assertTrue(x.getCardAt(51).toString().equals("K of d"));
		
		// REDUCE THE NUM OF CARDS
		
		assertTrue(x.getCardAt(0).toString().equals("A of s"));
		assertTrue(x.getCardAt(0).toString().equals("A of s"));
		assertTrue(x.getCardAt(0).toString().equals("A of s"));
		assertTrue(x.getCardAt(0).toString().equals("A of s"));
		
	}
	
	
}